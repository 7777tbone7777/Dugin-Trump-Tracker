import streamlit as st
import datetime
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import requests
import time
import random

# Dugin Agenda Items and Keywords
AGENDA_ITEMS = {
    "Dismantling NATO Alliances": ["NATO", "withdraw troops", "Trump NATO"],
    "Weakening U.S. Intelligence Community": ["FBI purge", "CIA cuts", "intelligence overhaul"],
    "Pulling Troops from Strategic Regions": ["troop withdrawal", "military exit"],
    "Promoting Christian Nationalism": ["Christian nationalism", "evangelical politics"],
    "Delegitimizing Elections": ["voter fraud", "rigged election"],
    "Reducing Federal Power Over States": ["states' rights", "federal overreach"],
    "Isolationist Foreign Policy": ["America First", "foreign aid cuts"],
    "Discrediting Free Press": ["fake news", "enemy of the people"],
    "Fostering Civil Unrest": ["civil war", "armed protest"],
    "Undermining Global Democratic Norms": ["autocracy rise", "authoritarian alliance"]
}

@st.cache_data(show_spinner=False)
def fetch_progress_and_headlines():
    api_key = st.secrets["NEWSAPI_KEY"]
    base_url = "https://newsapi.org/v2/everything"
    results = {}

    for item, keywords in AGENDA_ITEMS.items():
        # Pick a random keyword each run
        keyword = random.choice(keywords)
        hit_count = 0
        headlines = []

        params = {
            "q": keyword,
            "language": "en",
            "pageSize": 10,
            "sortBy": "publishedAt",
            "apiKey": api_key
        }
        try:
            response = requests.get(base_url, params=params, timeout=5)
            time.sleep(1)  # throttle
            data = response.json()
            articles = data.get("articles", [])
            for article in articles:
                title = article["title"]
                url = article["url"]
                source = article["source"]["name"]
                headlines.append((title, url, source))
                hit_count += 1
        except Exception as e:
            print(f"Error fetching {keyword}: {e}")

        # Scoring
        if hit_count <= 3:
            score = 10
        elif hit_count <= 7:
            score = 30
        elif hit_count <= 15:
            score = 60
        elif hit_count <= 25:
            score = 80
        else:
            score = 100

        results[item] = {
            "progress": score,
            "hit_count": hit_count,
            "headlines": headlines[:3],
            "keyword_used": keyword
        }

    return results

# Sidebar Context
st.sidebar.title("Dugin Context")
st.sidebar.markdown("""
Aleksandr Dugin, a Russian political philosopher, promotes a Eurasian worldview opposed to liberal Western democracy.

This dashboard tracks the advancement of his ideological blueprint through U.S. politics.
""")

# Dashboard Header
st.title("Dugin-Trump Agenda Tracker")
st.markdown("Live monitoring of 10 strategic objectives aligned with Dugin's ideology to evaluate their adoption within U.S. governance.")

# Fetch data
data = fetch_progress_and_headlines()
st.markdown("### Current Progress Snapshot (Auto-Sourced)")

for item, details in data.items():
    st.progress(details["progress"], text=f"{item}: {details['progress']}%")
    st.caption(f"ðŸ“° {details['hit_count']} articles matched â€” Keyword: *{details['keyword_used']}*")
    with st.expander("See headlines"):
        for title, url, source in details["headlines"]:
            st.markdown(f"- [{title}]({url}) _(via {source})_")

# Export Placeholder
if st.button("Export Intelligence PDF"):
    st.info("PDF export coming soon.")

# Email Report
def send_weekly_email():
    sender_email = st.secrets["EMAIL_USER"]
    password = st.secrets["EMAIL_PASS"]
    receiver_email = "scarfaceforward@gmail.com"

    message = MIMEMultipart("alternative")
    message["Subject"] = "Weekly Dugin-Trump Agenda Progress Update"
    message["From"] = sender_email
    message["To"] = receiver_email

    html = f"<html><body><h2>Dugin-Trump Agenda Weekly Report - {datetime.date.today()}</h2><ul>"
    for item, details in data.items():
        html += f"<li><strong>{item}:</strong> {details['progress']}% (Keyword: {details['keyword_used']})</li>"
    html += "</ul><p>This report was auto-generated by the Dugin-Trump Tracker System.</p></body></html>"

    part = MIMEText(html, "html")
    message.attach(part)

    with smtplib.SMTP_SSL("smtp.mail.yahoo.com", 465) as server:
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, message.as_string())

if st.button("Send Weekly Email Report"):
    send_weekly_email()
    st.success("Email sent to scarfaceforward@gmail.com")
